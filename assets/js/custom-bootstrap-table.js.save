var $table = $('.bootstrap-table');
var $remove = $('.bootstrap-table-remove');
var selections = [];

$(function(){
    initTable();
});

/* Bootstrap Table */
function getIdSelections() {
    return $.map($table.bootstrapTable('getSelections'), function(row) {
        return row.id
    })
}

function responseHandler(res) {
    $.each(res.rows, function(i, row) {
        row.state = $.inArray(row.id, selections) !== -1
    })
    return res
}

function detailFormatter(index, row) {
    var html = []
    $.each(row, function(key, value) {
        html.push('<p><b>' + key + ':</b> ' + value + '</p>')
    })
    return html.join('')
}

function operateFormatter(value, row, index) {
    return [
        '<a class="edit" href="javascript:void(0)" title="Edit">',
        '<i class="fas fa-edit text-warning fa-border"></i>',
        '</a>  ',
        '<a class="remove" href="javascript:void(0)" title="Remove">',
        '<i class="fas fa-trash text-danger fa-border"></i>',
        '</a>'
    ].join('')
}

window.operateEvents = {
    'click .edit': function(e, value, row, index) {
        alert('You click edit action, row: ' + JSON.stringify(row))
    },
    'click .add': function() {
        
    }
}

function initTable() {
    $table.bootstrapTable('destroy').bootstrapTable({
        height: 560,
    })
    $table.on('check.bs.table uncheck.bs.table ' +
        'check-all.bs.table uncheck-all.bs.table',
        function() {
            $remove.prop('disabled', !$table.bootstrapTable('getSelections').length)

            // save your data, here just save the current page
            selections = getIdSelections()
            // push or splice the selections if you want to save all data selections
        })
    $table.on('all.bs.table', function(e, name, args) {
        // console.log(name, args)
    })
    $remove.click(function() {
        var ids = getIdSelections()
        $table.bootstrapTable('remove', {
            field: 'id',
            values: ids
        })
        $remove.prop('disabled', true)
    })
}
